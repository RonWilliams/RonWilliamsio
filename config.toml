baseurl      = "https://ronwilliams.io/"
relativeurls = true
title        = "Ron Williams"
languageCode = "en-us"
theme        = "hello-friend-ng"
paginate     = 10
googleAnalytics = "UA-55432966-1"

# permits use of iframe in posts.
[markup.goldmark.renderer] 
  unsafe= true

[params]
  dateform        = "Jan 2, 2006"
  dateformShort   = "Jan 2"
  dateformNum     = "2006-01-02"
  dateformNumTime = "2006-01-02 15:04 -0700"

  # Subtitle for home
  homeSubtitle = "Leading Government Cloud / DevOps through Business Driven IT"

  # Set disableReadOtherPosts to true in order to hide the links to other posts.
  disableReadOtherPosts = false

  # Enable sharing buttons, if you linke
  enableSharingButtons = true

  # Metadata mostly used in document's head
  description = "Since 2004, I've empowered government agencies, non-profits, companies, and individuals to engage their audiences through cost effective IT platforms."
  keywords = "Ron Williams, cloud, DevOps, government, web development"
  images = [""]

  # Default theme "light" or "dark"
  defaultTheme = "light"
  

[taxonomies]
    category = "blog"
    tag      = "tags"
    series   = "series"

[languages]
  [languages.en]
    title = "Ron Williams"
    subtitle = "DevOps / Cloud Architect Washington DC"
    keywords = ""
    copyright = 'Ron Williams'
    readOtherPosts = "Read other posts"

    [languages.en.params.logo]
      logoText = "Ron Williams"
      logoHomeLink = "/"
    # or
    #
    # path = "/img/your-example-logo.svg"
    # alt = "Your example logo alt text"

  # And you can even create generic menu
  [[menu.main]]
    identifier = "blog"
    name       = "Blog"
    url        = "/posts"

  [[menu.main]]
    identifier = "about"
    name       = "About"
    url        = "/about"

  # Social icons
  [[params.social]]
    name = "twitter"
    url  = "https://twitter.com/ron_williams"

  [[params.social]]
    name = "email"
    url  = "mailto:hello@ronwilliams.io"

  [[params.social]]
    name = "github"
    url  = "https://github.com/ronwilliams"

  [[params.social]]
    name = "linkedin"
    url  = "https://www.linkedin.com/in/ronwilliamsio/"

  [params.portrait]
    path     = "img/ron-williams.jpeg"
    alt      = "Portrait of Ron Williams"
    maxWidth = "175px"

[deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.
order = [".jpg$", ".gif$"]


[[deployment.targets]]
# An arbitrary name for this target.
name = "s3"
# The Go Cloud Development Kit URL to deploy to. Examples:
# GCS; see https://gocloud.dev/howto/blob/#gcs
# URL = "gs://<Bucket Name>"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
URL = "s3://ronwilliams.io/?region=us-east-1"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
# URL = "azblob://$web"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# Samples:

[[deployment.matchers]]
#  Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true
